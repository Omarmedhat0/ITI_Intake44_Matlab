function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "EvenOrOdd"};
	this.sidHashMap["EvenOrOdd"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "EvenOrOdd:28"};
	this.sidHashMap["EvenOrOdd:28"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "EvenOrOdd:5"};
	this.sidHashMap["EvenOrOdd:5"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "EvenOrOdd:10"};
	this.sidHashMap["EvenOrOdd:10"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<Root>/In1"] = {sid: "EvenOrOdd:31"};
	this.sidHashMap["EvenOrOdd:31"] = {rtwname: "<Root>/In1"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "EvenOrOdd:3"};
	this.sidHashMap["EvenOrOdd:3"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/DetectEvorOd"] = {sid: "EvenOrOdd:28"};
	this.sidHashMap["EvenOrOdd:28"] = {rtwname: "<Root>/DetectEvorOd"};
	this.rtwnameHashMap["<Root>/Out1"] = {sid: "EvenOrOdd:33"};
	this.sidHashMap["EvenOrOdd:33"] = {rtwname: "<Root>/Out1"};
	this.rtwnameHashMap["<S1>/In1"] = {sid: "EvenOrOdd:29"};
	this.sidHashMap["EvenOrOdd:29"] = {rtwname: "<S1>/In1"};
	this.rtwnameHashMap["<S1>/Constant1"] = {sid: "EvenOrOdd:4"};
	this.sidHashMap["EvenOrOdd:4"] = {rtwname: "<S1>/Constant1"};
	this.rtwnameHashMap["<S1>/If"] = {sid: "EvenOrOdd:1"};
	this.sidHashMap["EvenOrOdd:1"] = {rtwname: "<S1>/If"};
	this.rtwnameHashMap["<S1>/If Action Subsystem"] = {sid: "EvenOrOdd:5"};
	this.sidHashMap["EvenOrOdd:5"] = {rtwname: "<S1>/If Action Subsystem"};
	this.rtwnameHashMap["<S1>/If Action Subsystem1"] = {sid: "EvenOrOdd:10"};
	this.sidHashMap["EvenOrOdd:10"] = {rtwname: "<S1>/If Action Subsystem1"};
	this.rtwnameHashMap["<S1>/Math Function"] = {sid: "EvenOrOdd:2"};
	this.sidHashMap["EvenOrOdd:2"] = {rtwname: "<S1>/Math Function"};
	this.rtwnameHashMap["<S1>/Merge"] = {sid: "EvenOrOdd:14"};
	this.sidHashMap["EvenOrOdd:14"] = {rtwname: "<S1>/Merge"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "EvenOrOdd:30"};
	this.sidHashMap["EvenOrOdd:30"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S2>/Action Port"] = {sid: "EvenOrOdd:7"};
	this.sidHashMap["EvenOrOdd:7"] = {rtwname: "<S2>/Action Port"};
	this.rtwnameHashMap["<S2>/String Constant"] = {sid: "EvenOrOdd:9"};
	this.sidHashMap["EvenOrOdd:9"] = {rtwname: "<S2>/String Constant"};
	this.rtwnameHashMap["<S2>/Out1"] = {sid: "EvenOrOdd:8"};
	this.sidHashMap["EvenOrOdd:8"] = {rtwname: "<S2>/Out1"};
	this.rtwnameHashMap["<S3>/Action Port"] = {sid: "EvenOrOdd:11"};
	this.sidHashMap["EvenOrOdd:11"] = {rtwname: "<S3>/Action Port"};
	this.rtwnameHashMap["<S3>/String Constant"] = {sid: "EvenOrOdd:12"};
	this.sidHashMap["EvenOrOdd:12"] = {rtwname: "<S3>/String Constant"};
	this.rtwnameHashMap["<S3>/Out1"] = {sid: "EvenOrOdd:13"};
	this.sidHashMap["EvenOrOdd:13"] = {rtwname: "<S3>/Out1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
